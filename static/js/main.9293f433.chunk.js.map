{"version":3,"sources":["components/dateTime.js","components/weatherConditions.js","components/API_KEY.js","App.js","index.js"],"names":["TimeDate","useState","Date","date","updateDate","useEffect","interval","setInterval","clearInterval","id","getMonth","getFullYear","slice","getDay","n","s","v","getOrdinal","getDate","hours","getHours","minutes","getMinutes","ampm","formatAMPM","API","Weather","lat","setLat","long","setLong","weatherData","setWeatherData","a","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","then","res","json","result","fetchData","className","main","temp","weather","name","sys","country","Math","round","App","todo","setTodo","todoList","updateTodoList","editingText","setEditingText","todoEditing","setTodoEditing","React","accessedStorage","localStorage","getItem","loadedTodoList","JSON","parse","length","stringify","setItem","onSubmit","e","preventDefault","myNewTodo","getTime","text","completed","placeholder","onChange","target","value","type","onClick","filter","item","enterAnimation","leaveAnimation","map","style","textDecoration","allItems","itemCompleted","toUpperCase","updatedTodos","editItem","items","splice","deleteItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9293f433.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport function TimeDate() {\n  const [date, updateDate] = useState(new Date());\n\n  useEffect(() => {\n    let interval;\n    interval = setInterval(() => {\n      updateDate(new Date());\n    }, 1000);\n    return () => clearInterval(interval);\n  });\n\n  const monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const dayNames = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\",\n  ];\n\n  const getOrdinal = (n) => {\n    const s = [\"th\", \"st\", \"nd\", \"rd\"],\n      v = n % 100;\n    return n + (s[(v - 20) % 10] || s[v] || s[0]);\n  };\n\n  const formatAMPM = (date) => {\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let ampm = hours >= 12 ? \"PM\" : \"AM\";\n    hours = hours % 12 === 0 ? 12 : hours; // Converts the hour '0' to '12'.\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    return hours + \":\" + minutes + ampm;\n  };\n\n  return (\n    <div id=\"dateInfo\">\n      <p id=\"monthYear\">{`${\n        monthNames[date.getMonth()]\n      } ${date.getFullYear()}`}</p>\n      <p id=\"todaysDate\">{`${\n        dayNames.slice(date.getDay() - 1)[0]\n      }, ${getOrdinal(date.getDate())}`}</p>\n      <p id=\"currentTime\">{formatAMPM(date)}</p>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { API_KEY } from \"./API_KEY.js\";\n\nconst API = {\n  KEY: API_KEY,\n  URL: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nexport function Weather() {\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [weatherData, setWeatherData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n\n      await fetch(\n        `${API.URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${API.KEY}`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setWeatherData(result);\n        });\n    };\n    fetchData();\n  }, [lat, long]);\n\n  return (\n    <div>\n      <div\n        className={\n          typeof weatherData.main != \"undefined\"\n            ? weatherData.main.temp > 15 &&\n              weatherData.main.temp < 30 &&\n              weatherData.weather[0].main === \"Clouds\"\n              ? \"weather warmcloudy\"\n              : weatherData.main.temp > 15 &&\n                weatherData.main.temp < 30 &&\n                weatherData.weather[0].main === \"Clear\"\n              ? \"weather warm\"\n              : weatherData.main.temp < 1 &&\n                weatherData.weather[0].main !== \"Rain\"\n              ? \"weather ice\"\n              : weatherData.weather[0].main === \"Thunderstorm\"\n              ? \"weather lightning\"\n              : weatherData.weather[0].main === \"Snow\"\n              ? \"weather snow\"\n              : weatherData.main.temp >= 30 &&\n                weatherData.weather[0].main !== \"Rain\"\n              ? \"weather hot\"\n              : weatherData.main.temp < 6 &&\n                weatherData.weather[0].main === \"Clear\"\n              ? \"weather coldclear\"\n              : weatherData.weather[0].main === \"Rain\"\n              ? \"weather raining\"\n              : \"weather clear\"\n            : \"weather\"\n        }\n      >\n        {typeof weatherData.main != \"undefined\" ? (\n          <div className=\"weather-box\">\n            <div id=\"location\">\n              {weatherData.name}, {weatherData.sys.country}\n              <div id=\"temp\">{Math.round(weatherData.main.temp)}Â°c</div>\n              <div id=\"weather\">{weatherData.weather[0].main}</div>\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    </div>\n  );\n}\n","export const API_KEY = `35b3cb0c406aa148e36dbe8f8ad4e352`;\n","import React, { useState } from \"react\";\nimport FlipMove from \"react-flip-move\";\nimport { TimeDate } from \"./components/dateTime\";\nimport { Weather } from \"./components/weatherConditions\";\nimport \"./css/App.css\";\nimport \"./css/dateTime.css\";\nimport \"./css/weatherConditions.css\";\n\nfunction App() {\n  const [todo, setTodo] = useState(\"\");\n  const [todoList, updateTodoList] = useState([]);\n  const [editingText, setEditingText] = useState(\"\");\n  const [todoEditing, setTodoEditing] = useState(\"\");\n\n  React.useEffect(() => {\n    const accessedStorage = localStorage.getItem(\"todoList\");\n    const loadedTodoList = JSON.parse(accessedStorage); // Parse converts a JSON string into an object.\n    if (loadedTodoList.length) {\n      updateTodoList(loadedTodoList);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const json = JSON.stringify(todoList); // stringify turns any JavaScript into JSON.\n    localStorage.setItem(\"todoList\", json); // Creates a Key/Pair value\n  }, [todoList]);\n\n  const addItem = (e) => {\n    e.preventDefault();\n    const myNewTodo = {\n      id: new Date().getTime(),\n      text: todo,\n      completed: false,\n    };\n    if (myNewTodo.text !== \"\") {\n      updateTodoList([...todoList, myNewTodo]);\n      setTodo(\"\");\n    }\n  };\n\n  const deleteItem = (id) => {\n    let items = [...todoList];\n    items.splice(id, 1);\n    updateTodoList(items);\n  };\n\n  const editItem = (id) => {\n    const updatedTodos = [...todoList].map((todo) => {\n      if (todo.id === id && editingText !== \"\") {\n        todo.text = editingText;\n      }\n      return todo;\n    });\n    updateTodoList(updatedTodos);\n    setTodoEditing(\"\");\n    setEditingText(\"\");\n  };\n\n  const itemCompleted = (id) => {\n    let allItems = [...todoList];\n    allItems[id].completed = !allItems[id].completed;\n    updateTodoList(allItems);\n  };\n\n  const removeCompletedItems = () => {\n    const completed = [...todoList].filter((item) => item.completed !== true);\n    updateTodoList(completed);\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={addItem}>\n        <div className=\"box\">\n          <TimeDate />\n          <Weather />\n        </div>\n        <input\n          id=\"Input\"\n          placeholder=\"Enter Todo...\"\n          onChange={(e) => setTodo(e.target.value)} // e is an event object, target is the input, value is the value of that input\n          value={todo}\n        />\n        <button id=\"Add\" type=\"submit\">\n          Add\n        </button>\n      </form>\n      <button id=\"seeCompleted\" onClick={removeCompletedItems}>\n        Remove Completed Todos â\n      </button>\n      <FlipMove\n        enterAnimation=\"accordionVertical\"\n        leaveAnimation=\"accordionVertical\"\n      >\n        {todoList.map((item, id) => {\n          return (\n            <ol key={item.id}>\n              <p\n                id=\"list\"\n                style={{\n                  textDecoration: item.completed === true ? \"line-through\" : \"\",\n                }}\n              >\n                <input type=\"checkbox\" onClick={() => itemCompleted(id)} />\n                {todoEditing === item.id ? (\n                  <input\n                    type=\"text\"\n                    placeholder={\n                      item.text[0].toUpperCase() + item.text.slice(1)\n                    }\n                    onChange={(e) => setEditingText(e.target.value)}\n                    value={editingText}\n                  />\n                ) : (\n                  `${id + 1}. ${item.text[0].toUpperCase()}${item.text.slice(\n                    1\n                  )}`\n                )}\n                {todoEditing === item.id ? (\n                  <button id=\"SubmitEdit\" onClick={() => editItem(item.id)}>\n                    Submit Edit â\n                  </button>\n                ) : (\n                  <button id=\"Edit\" onClick={() => setTodoEditing(item.id)}>\n                    Edit â\n                  </button>\n                )}\n                <button id=\"Delete\" onClick={() => deleteItem(id)}>\n                  Delete â\n                </button>\n              </p>\n            </ol>\n          );\n        })}\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}